[{"path":"https://epiforecasts.io/socialmixr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 socialmixr package authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Introduction to socialmixr","text":"latest stable version socialmixr package installed via latest development version socialmixr package can installed via load package, use heart socialmixr package contact_matrix() function. extracts contact matrix survey data. can use R help find usage contact_matrix() function, including list examples: POLYMOD data included package can loaded using example use generates contact matrix UK part POLYMOD study, age groups 0-1, 1-5, 5-15 15+ years. contains mean number contacts member age group (row) reported members another age group (column).","code":"install.packages('socialmixr') devtools::install_github('sbfnk/socialmixr') library('socialmixr') #>  #> Attaching package: 'socialmixr' #> The following object is masked from 'package:utils': #>  #>     cite ?contact_matrix data(polymod) contact_matrix(polymod, countries = \"United Kingdom\", age.limits = c(0, 1, 5, 15)) #> Using POLYMOD social contact data. To cite this in a publication, use the 'cite' function #> Removing participants that have contacts without age information. To change this behaviour, set the 'missing.contact.age' option #> $matrix #>          contact.age.group #> age.group      [0,1)     [1,5)   [5,15)      15+ #>    [0,1)  0.40000000 0.8000000 1.266667 5.933333 #>    [1,5)  0.11250000 1.9375000 1.462500 5.450000 #>    [5,15) 0.02450980 0.5049020 7.946078 6.215686 #>    15+    0.03230337 0.3581461 1.290730 9.594101 #>  #> $participants #>    age.group participants proportion #> 1:     [0,1)           15 0.01483680 #> 2:     [1,5)           80 0.07912957 #> 3:    [5,15)          204 0.20178042 #> 4:       15+          712 0.70425321"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"surveys","dir":"Articles","previous_headings":"","what":"Surveys","title":"Introduction to socialmixr","text":"key argument contact_matrix() function survey supposed use. socialmixr package includes POLYMOD survey, used survey specified. also provides access surveys Social contact data community Zenodo. available surveys can listed (internet connection available) survey can downloaded using get_survey() command. get relevant data survey given Zenodo DOI (returned list_surveys()). relevant commands socialmixr package accept DOI, survey used repeatedly worth downloading storing locally avoid need network connection speed processing. way, peru data set can loaded future without need internet connection using surveys may contain data multiple countries. check , use survey_countries function one wishes get contact matrix one specific countries, countries argument can passed contact_matrix(). done, different surveys contained dataset combined one single sample (.e., applying population-weighting country correction). default, socialmixr uses POLYMOD survey. reference given survey can obtained using cite(), e.g.","code":"list_surveys() peru_survey <- get_survey(\"https://doi.org/10.5281/zenodo.1095664\") saveRDS(peru_survey, \"peru.rds\") peru_survey <- readRDS(\"peru.rds\") survey_countries(polymod) #> Using POLYMOD social contact data. To cite this in a publication, use the 'cite' function #> [1] \"Italy\"          \"Germany\"        \"Luxembourg\"     \"Netherlands\"    #> [5] \"Poland\"         \"United Kingdom\" \"Finland\"        \"Belgium\" cite(polymod) #> Using POLYMOD social contact data. To cite this in a publication, use the 'cite' function #> Mossong J, Hens N, Jit M, Beutels P, Auranen K, Mikolajczyk R, Massari #> M, Salmaso S, Tomba GS, Wallinga J, Heijne J, Sadkowska-Todys M, #> Rosinska M, Edmunds WJ (2017). \"POLYMOD social contact data.\" #> doi:10.5281/zenodo.1157934 <https://doi.org/10.5281/zenodo.1157934>, #> Version 1.1."},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"bootstrapping","dir":"Articles","previous_headings":"","what":"Bootstrapping","title":"Introduction to socialmixr","text":"get idea uncertainty contact matrices, bootstrap can used. argument n greater 1 passed contact_matrix(), multiple samples contact matrices generated. sample, participants sampled (replacement, get number participants original study), contacts sampled set contacts participants (, replacement). resulting contact matrices returned matrices field returned list. , derived quantities can obtained, example mean","code":"m <- contact_matrix(polymod, countries = \"United Kingdom\", age.limits = c(0, 1, 5, 15), n=5) #> Using POLYMOD social contact data. To cite this in a publication, use the 'cite' function length(m$matrices) #> [1] 5 mr <- Reduce(\"+\", lapply(m$matrices, function(x) {x$matrix})) / length(m$matrices) mr #>          contact.age.group #> age.group      [0,1)     [1,5)   [5,15)      15+ #>    [0,1)  0.19361111 0.8471032 1.420198 5.561270 #>    [1,5)  0.08202942 1.9237209 1.480433 5.496221 #>    [5,15) 0.02177130 0.4524856 8.051055 5.790005 #>    15+    0.02978169 0.3779637 1.334433 9.530103"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"demography","dir":"Articles","previous_headings":"","what":"Demography","title":"Introduction to socialmixr","text":"Obtaining symmetric contact matrices, splitting components (see ) age-specific participant weights require information underlying demographic composition survey population. can passed contact_matrix() survey.pop argument, data.frame two columns, lower.age.limit (denoting lower end age groups) population (denoting number people age group). survey.pop given, contact_matrix() try obtain age structure population (per countries argument) World Population Prospects United Nations, using estimates year closest matches year contact survey conducted. demographic information used, returned contact_matrix() demography field results list. possible enforce prevent function return demography data using return.demography option.","code":"contact_matrix(polymod, countries = \"United Kingdom\", age.limits = c(0, 20),                 return.demography = TRUE)$demography #>    age.group population proportion year #> 1:    [0,20)   14799290  0.2454816 2005 #> 2:       20+   45487461  0.7545184 2005"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"symmetric-contact-matrices","dir":"Articles","previous_headings":"","what":"Symmetric contact matrices","title":"Introduction to socialmixr","text":"Conceivably, contact matrices symmetric: total number contacts made members one age group another vice versa. Mathematically, \\(m_{ij}\\) mean number contacts made members age group \\(\\) members age group \\(j\\), total number people age group \\(\\) \\(N_i\\), \\[m_{ij} N_i = m_{ji}N_j\\] variation sample contact matrix obtained, relationship usually fulfilled exactly. order obtain symmetric contact matrix fulfills , one can use \\[m'_{ij} = \\frac{1}{2N_i} (m_{ij} N_i + m_{ji} N_j)\\] get version contact matrix, use symmetric = TRUE calling contact_matrix() function.","code":"contact_matrix(polymod, countries = \"United Kingdom\", age.limits = c(0, 1, 5, 15), symmetric = TRUE) #> Using POLYMOD social contact data. To cite this in a publication, use the 'cite' function #> Removing participants that have contacts without age information. To change this behaviour, set the 'missing.contact.age' option #> Warning in pop_age(survey.pop, part.age.group.present, ...): Not all age groups represented in population data (5-year age band). #>   Linearly estimating age group sizes from the 5-year bands. #> $matrix #>       contact.age.group #>             [0,1)     [1,5)   [5,15)      15+ #>   [1,] 0.40000000 0.6250000 0.764365 4.122919 #>   [2,] 0.15625000 1.9375000 1.406063 5.929829 #>   [3,] 0.07148821 0.5260153 7.946078 7.428739 #>   [4,] 0.05759306 0.3313352 1.109550 9.594101 #>  #> $demography #>    age.group population proportion year #> 1:     [0,1)     690734 0.01145748 2005 #> 2:     [1,5)    2762936 0.04582990 2005 #> 3:    [5,15)    7385454 0.12250542 2005 #> 4:       15+   49447627 0.82020720 2005 #>  #> $participants #>    age.group participants proportion #> 1:     [0,1)           15 0.01483680 #> 2:     [1,5)           80 0.07912957 #> 3:    [5,15)          204 0.20178042 #> 4:       15+          712 0.70425321"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"contact-rates-per-capita","dir":"Articles","previous_headings":"","what":"Contact rates per capita","title":"Introduction to socialmixr","text":"contact matrix per capita \\(c_{ij}\\) contains social contact rates one individual age \\(\\) one individual age \\(j\\), given population details. example, \\(c_{ij}\\) used infectious disease modelling calculate force infection, based likelihood one susceptible individual age \\(\\) contact one infectious individual age \\(j\\). contact rates per capita calculated follows: \\[c_{ij} =  \\tfrac{m_{ij}}{N_{j}}\\] get per capita contact matrix, use per.capita = TRUE calling contact_matrix() function. Please note option symmetric = TRUE specified, contact matrix \\(m_{ij}\\) can show asymmetry sub-population sizes different, contact matrix per capita fully symmetric: \\[c'_{ij} = \\frac{m_{ij} N_i + m_{ji} N_j}{2N_iN_j} = c'_{ji}\\]","code":"contact_matrix(survey = polymod, countries = \"Germany\", age.limits = c(0,60), symmetric = TRUE, per.capita = TRUE) #> $matrix #>       contact.age.group #>          [0,60)       60+ #>   [1,] 7.743879 0.8967442 #>   [2,] 2.711694 2.1267606 #>  #> $matrix.per.capita #>       contact.age.group #>              [0,60)          60+ #>   [1,] 1.261735e-07 4.418248e-08 #>   [2,] 4.418248e-08 1.047852e-07 #>  #> $demography #>    age.group population proportion year #> 1:    [0,60)   61374868  0.7514869 2005 #> 2:       60+   20296375  0.2485131 2005 #>  #> $participants #>    age.group participants proportion #> 1:    [0,60)         1062  0.8329412 #> 2:       60+          213  0.1670588"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"splitting-contact-matrices","dir":"Articles","previous_headings":"","what":"Splitting contact matrices","title":"Introduction to socialmixr","text":"contact_matrix() contains simple model elements contact matrix, split global component, well three components representing contacts, assortativity demography. words, elements \\(m_{ij}\\) contact matrix modeled \\[ m_{ij} = q d_i a_{ij} n_j \\] \\(q d_i\\) number contacts member group \\(\\) makes across age groups, \\(n_j\\) proportion surveyed population age group \\(j\\). constant \\(q\\) set value largest eigenvalue \\(m_{ij}\\); used infectious disease model, can replaced basic reproduction number \\(R_0\\). model contact matrix way contact_matrix() function, set split = TRUE. components matrix returned elements normalisation (\\(q\\)), contacts (\\(d_i\\)), matrix (\\(a_{ij}\\)) demography (\\(n_j\\)) resulting list.","code":"contact_matrix(polymod, countries = \"United Kingdom\", age.limits = c(0, 1, 5, 15), split = TRUE) #> Using POLYMOD social contact data. To cite this in a publication, use the 'cite' function #> Removing participants that have contacts without age information. To change this behaviour, set the 'missing.contact.age' option #> Warning in pop_age(survey.pop, part.age.group.present, ...): Not all age groups represented in population data (5-year age band). #>   Linearly estimating age group sizes from the 5-year bands. #> $mean.contacts #> [1] 11.55481 #>  #> $normalisation #> [1] 1.039163 #>  #> $contacts #> [1] 0.6995727 0.7464190 1.2235173 0.9390331 #>  #> $matrix #>           [,1]      [,2]     [,3]      [,4] #> [1,] 4.1561551 2.0780776 1.230914 0.8611839 #> [2,] 1.0955555 4.7169752 1.332022 0.7413849 #> [3,] 0.1456110 0.7498969 4.415104 0.5158328 #> [4,] 0.2500527 0.6930808 0.934443 1.0374170 #>  #> $demography #>    age.group population proportion year #> 1:     [0,1)     690734 0.01145748 2005 #> 2:     [1,5)    2762936 0.04582990 2005 #> 3:    [5,15)    7385454 0.12250542 2005 #> 4:       15+   49447627 0.82020720 2005 #>  #> $participants #>    age.group participants proportion #> 1:     [0,1)           15 0.01483680 #> 2:     [1,5)           80 0.07912957 #> 3:    [5,15)          204 0.20178042 #> 4:       15+          712 0.70425321"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"filtering","dir":"Articles","previous_headings":"","what":"Filtering","title":"Introduction to socialmixr","text":"filter argument contact_matrix() can used select particular participants contacts. example, polymod dataset, indicators cnt_home, cnt_work, cnt_school, cnt_transport, cnt_leisure cnt_otherplace take value 0 1 depending contact occurred. filter can applied data, given list form (column=filter_value). , contacts ‘filter_value’ ‘column’ considered generated contact matrix:","code":"# contact matrix for school-related contacts contact_matrix(polymod, age.limits = c(0, 20, 60), filter = list(cnt_school=1))$matrix #>          contact.age.group #> age.group     [0,20)    [20,60)        60+ #>   [0,20)  5.15826279 1.09311741 0.03570114 #>   [20,60) 0.45610034 0.47434436 0.01453820 #>   60+     0.08917836 0.07314629 0.03507014  # contact matrix for work-related contacts involving physical contact contact_matrix(polymod, age.limits = c(0, 20, 60), filter = list(cnt_work=1, phys_contact=1))$matrix #>          contact.age.group #> age.group     [0,20)    [20,60)         60+ #>   [0,20)  0.04266274 0.06325855 0.009194557 #>   [20,60) 0.16020525 1.26966933 0.145952109 #>   60+     0.04212638 0.29287864 0.062186560  # contact matrix for daily contacts at home with males contact_matrix(polymod, age.limits = c(0, 20, 60), filter = list(cnt_home=1, cnt_gender=\"M\", duration_multi=5))$matrix #>          contact.age.group #> age.group     [0,20)   [20,60)        60+ #>   [0,20)  0.39242369 0.5855094 0.03089371 #>   [20,60) 0.25919589 0.3940690 0.04875962 #>   60+     0.05717151 0.1153460 0.23871615"},{"path":[]},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"temporal-aspects-and-demography","dir":"Articles","previous_headings":"Participant weights","what":"Temporal aspects and demography","title":"Introduction to socialmixr","text":"Participant weights commonly used align sample population characteristics terms temporal aspects age distribution. example, day week reported driving factor social contact behavior, hence obtain weekly average, survey data represent weekly 2/5 distribution weekend/week days. align survey data distribution, one can obtain participant weights form : \\[w_{\\textrm{day..week}} = \\tfrac{5/7}{N_{\\textrm{weekday}}/N} \\text{    } \\tfrac{2/7}{N_{\\textrm{weekend}}/N}\\] sample size \\(N\\), \\(N_{weekday}\\) \\(N_{weekend}\\) number participants surveyed weekdays weekend days, respectively. possible remove constant values (e.g. \\(w = 5/N_{weekday}\\)), results standardized weights. However, opt use relative proportions calculate weights enable truncation generic threshold (see ). Another driver social contact patterns age. improve representativeness survey data, age-specific weights can calculated : \\[w_{age} = \\tfrac{P_{}\\ /\\ P}{N_{}\\ /\\ N}\\] \\(P\\) population size, \\(P_a\\) population fraction age \\(\\), \\(N\\) survey sample size \\(N_a\\) survey fraction age \\(\\). combination age-specific temporal weights participant \\(\\) age \\(\\) can constructed : \\[w_{} = w_{\\textrm{age}} * w_{\\textrm{day..week}} \\] Finally, weights can standardized follows: \\[\\tilde{w}_{} =  \\tfrac{w_{}}{\\sum_{}^{} w_{}} * N \\] social contact analysis based stratification splitting population non-overlapping groups, requires weights standardized weighted totals within mutually exclusive cells equal known population totals (Kolenikov 2016). post-stratification cells need mutually exclusive cover whole population. post-stratified (PS) weight participant \\(\\)  : \\[\\tilde{w}^{PS}_{} =  \\tfrac{w_{}}{\\sum_{\\text{j}}^{\\text{group g}} w_{j}} * N_g\\] Temporal weights activated contact_matrix() weigh.dayofweek = TRUE age-specific weights weight.age = TRUE. post-stratification weights calculated default. possible obtain participant weights via option return.part.weights = TRUE.","code":"contact_matrix(survey = polymod, age.limits = c(0,18,60), weigh.dayofweek = TRUE,                 weigh.age = TRUE, return.part.weights = TRUE) #> $matrix #>          contact.age.group #> age.group    [0,18)   [18,60)       60+ #>   [0,18)  8.5152158  5.839458 0.7193179 #>   [18,60) 2.0433998 10.318853 1.2413142 #>   60+     0.7761051  4.354554 2.4995467 #>  #> $demography #>    age.group population proportion year #> 1:    [0,18)   52955807  0.1948624 2005 #> 2:   [18,60)  157719526  0.5803634 2005 #> 3:       60+   61084635  0.2247742 2005 #>  #> $participants #>    age.group participants proportion #> 1:    [0,18)         2462  0.3420395 #> 2:   [18,60)         3745  0.5202834 #> 3:       60+          991  0.1376771 #>  #> $participants.weights #>      age.group participant.age is.weekday    weight participants   proportion #>   1:    [0,18)               0      FALSE 1.4566422           27 0.0037510420 #>   2:    [0,18)               0       TRUE 1.3087772           66 0.0091692137 #>   3:    [0,18)               1      FALSE 1.1288977           32 0.0044456794 #>   4:    [0,18)               1       TRUE 1.0143024           88 0.0122256182 #>   5:    [0,18)               2      FALSE 0.9473268           39 0.0054181717 #>  ---                                                                          #> 167:       60+              83       TRUE 5.6502663            4 0.0005557099 #> 168:       60+              84      FALSE 8.3848408            1 0.0001389275 #> 169:       60+              84       TRUE 7.5336884            2 0.0002778550 #> 170:       60+              85       TRUE 3.1671409            3 0.0004167824 #> 171:       60+              90       TRUE 4.7540746            1 0.0001389275"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"user-defined-participant-weights","dir":"Articles","previous_headings":"Participant weights","what":"User-defined participant weights","title":"Introduction to socialmixr","text":"contact_matrix() allows specify use participant weights. Therefore, provide names columns participant data want use weight reported contacts via weights argument.","code":"# e.g. use household size as (dummy) weight to provide more importance to participant data from large households contact_matrix(survey = polymod, age.limits = c(0,18,60), weights = c('hh_size')) #> $matrix #>          contact.age.group #> age.group    [0,18)   [18,60)       60+ #>   [0,18)  8.9599558  5.907367 0.7338418 #>   [18,60) 2.4650353 10.960550 1.2399199 #>   60+     0.9909593  5.659468 2.7081868 #>  #> $participants #>    age.group participants proportion #> 1:    [0,18)         2462  0.3420395 #> 2:   [18,60)         3745  0.5202834 #> 3:       60+          991  0.1376771"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"weight-threshold","dir":"Articles","previous_headings":"Participant weights","what":"Weight threshold","title":"Introduction to socialmixr","text":"survey population differs extensively demography, participants can end relatively high weights , excessive contribution population average. warrants limitation single participant influences truncation weights. enable contact_matrix(), need provide numeric weight.threshold. truncation applied standardized weights, followed another standardization make sure sum weights still equals sample size. latter can lead final weights little exceed given threshold value.","code":"contact_matrix(survey = polymod, age.limits = c(0,18,60), weigh.dayofweek = TRUE,                 weigh.age = TRUE, return.part.weights = TRUE, weight.threshold = 3) #> $matrix #>          contact.age.group #> age.group    [0,18)   [18,60)       60+ #>   [0,18)  8.5152158  5.839458 0.7193179 #>   [18,60) 2.0433998 10.318853 1.2413142 #>   60+     0.7720958  4.410151 2.5401091 #>  #> $demography #>    age.group population proportion year #> 1:    [0,18)   52955807  0.1948624 2005 #> 2:   [18,60)  157719526  0.5803634 2005 #> 3:       60+   61084635  0.2247742 2005 #>  #> $participants #>    age.group participants proportion #> 1:    [0,18)         2462  0.3420395 #> 2:   [18,60)         3745  0.5202834 #> 3:       60+          991  0.1376771 #>  #> $participants.weights #>      age.group participant.age is.weekday    weight participants   proportion #>   1:    [0,18)               0      FALSE 1.4566422           27 0.0037510420 #>   2:    [0,18)               0       TRUE 1.3087772           66 0.0091692137 #>   3:    [0,18)               1      FALSE 1.1288977           32 0.0044456794 #>   4:    [0,18)               1       TRUE 1.0143024           88 0.0122256182 #>   5:    [0,18)               2      FALSE 0.9473268           39 0.0054181717 #>  ---                                                                          #> 167:       60+              83       TRUE 3.1063091            4 0.0005557099 #> 168:       60+              84      FALSE 3.1063091            1 0.0001389275 #> 169:       60+              84       TRUE 3.1063091            2 0.0002778550 #> 170:       60+              85       TRUE 3.1063091            3 0.0004167824 #> 171:       60+              90       TRUE 3.1063091            1 0.0001389275"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"numerical-example","dir":"Articles","previous_headings":"Participant weights","what":"Numerical example","title":"Introduction to socialmixr","text":"numeric examples, show importance post-stratification weights contrast using crude weights directly within age-groups. apply weights age day week separately examples, though combination straightforward via multiplication.","code":""},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"get-survey-data","dir":"Articles","previous_headings":"Participant weights > Numerical example","what":"Get survey data","title":"Introduction to socialmixr","text":"start survey including 6 participants 1, 2 3 years age. ages equally represented sample, though assume equally present reference population. calculate weighted average number contacts age age group, using {1,2} {3} years age. following table shows reported number contacts per participant \\(\\), represented \\(m_i\\): summary statistics sample (N) reference population (P) follows survey data results unweighted average number contacts: age-specific unweighted averages number contacts:","code":"N             = 6 N_age         = c(2, 3, 1) N_age.group   = c(5, 1) N_day.of.week = c(3, 3)  P             = 3000 P_age         = c(1000, 1000, 1000) P_age.group   = c(2000, 1000)  P_day.of.week = c(5/7, 2/7) * 3000 #> [1] \"unweighted average number of contacts: 7.83\""},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"weight-by-day-of-week","dir":"Articles","previous_headings":"Participant weights > Numerical example","what":"Weight by day of week","title":"Introduction to socialmixr","text":"following table contains participants weights based survey day without population sample size constants (\\(w\\) \\(w'\\), respectively). Note standardized weights \\(\\tilde{w}\\) \\(\\tilde{w'}\\) : Note different scale \\(w\\) \\(w'\\), straightforward interpretation numerical value \\(w\\) terms relative differences apply truncation. Using standardized weights, able calculate weighted number contacts: population-based weights directly used age-specific groups, contact behavior 3 year-old participant, participated week day, inflated due -representation week days survey sample. addition, number contacts 1 year-old participants decreased -representation weekend days survey. Using population-weights within two aggregated age groups, obtain intuitive weighting age group , still skewed individuals age group B. , weighted average age group B meaning terms social contact behavior: subdivide population, need use post-stratification weights (“w_PS”) weighted totals within mutually exclusive cells equal sample size. age groups, goes follows: weighted means equal:","code":"#> [1] \"weighted average number of contacts: 9.2\""},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"weight-by-age","dir":"Articles","previous_headings":"Participant weights > Numerical example","what":"Weight by age","title":"Introduction to socialmixr","text":"repeated example calculating age-specific participant weights population age-group level: age-specific weights directly used within age groups, contact behavior age group B inflated unrealistic levels number contacts age group artificially low: Using post-stratification weights, end :","code":"#> [1] \"weighted average number of contacts: 8.85\""},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"apply-threshold","dir":"Articles","previous_headings":"Participant weights > Numerical example","what":"Apply threshold","title":"Introduction to socialmixr","text":"start survey data 14 participants 1, 2 3 years age, sampled population ages equally present. Given high representation participants aged 1 year, age-specific proportions skewed comparison reference population. calculate age-specific weights (un)weighted average number contacts, end : single participant 3 years age large influence weighted population average. , propose truncate relative age-specific weights \\(w\\) 3. , weighted population average equals:","code":"#> [1] \"unweighted average number of contacts: 5.86\" #> [1] \"weighted average number of contacts: 13.86\" #> [1] \"weighted average number of contacts after truncation: 10.28\""},{"path":[]},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"using-ggplot2","dir":"Articles","previous_headings":"Plotting","what":"Using ggplot2","title":"Introduction to socialmixr","text":"contact matrices can plotted using geom_tile() function ggplot2 package.","code":"library('reshape2') library('ggplot2') df <- melt(mr, varnames = c(\"age.group\", \"age.group.contact\"), value.name = \"contacts\") ggplot(df, aes(x = age.group, y = age.group.contact, fill = contacts)) +    theme(legend.position = \"bottom\") +    geom_tile()"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"using-r-base","dir":"Articles","previous_headings":"Plotting","what":"Using R base","title":"Introduction to socialmixr","text":"contact matrices can also plotted matrix_plot() function grid colored rectangles numeric values cells. Heat colors used default, though can changed.","code":"matrix_plot(mr) matrix_plot(mr, color.palette = gray.colors) usr_col <- function(x){ return(grDevices::hcl.colors(x, 'YlGn')) } matrix_plot(mr, num.colors = 9, color.palette = usr_col)"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to socialmixr","text":"Hens, Niel, Girma Minalu Ayele, Nele Goeyvaerts, Marc Aerts, Joel Mossong, John W. Edmunds, Philippe Beutels. 2009. “Estimating Impact School Closure Social Mixing Behaviour Transmission Close Contact Infections Eight European Countries.” BMC Infectious Diseases 9 (1): 1–12. https://doi.org/10.1186/1471-2334-9-187. Kolenikov, Stas. 2016. “Post-Stratification Non-Response Adjustment?” Survey Practice 9 (3): 2809. https://doi.org/10.29115/SP-2016-0014. Mossong, Joël, Niel Hens, Mark Jit, Philippe Beutels, Kari Auranen, Rafael Mikolajczyk, Marco Massari, et al. 2008. “Social Contacts Mixing Patterns Relevant Spread Infectious Diseases.” PLOS Medicine 5 (3): e74. https://doi.org/10.1371/journal.pmed.0050074. Willem, Lander, Kim Van Kerckhove, Dennis L. Chao, Niel Hens, Philippe Beutels. 2012. “Nice Day Infection? Weather Conditions Social Contact Patterns Relevant Influenza Transmission.” PLOS ONE 7 (11): e48695. https://doi.org/10.1371/journal.pone.0048695.","code":""},{"path":"https://epiforecasts.io/socialmixr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Funk. Author, maintainer. Lander Willem. Author. Maria Bekker-Nielsen Dunbar. Contributor. Carl . B. Pearson. Contributor. Sam Clifford. Contributor. Christopher Jarvis. Contributor. Alexis Robert. Contributor. Niel Hens. Contributor.","code":""},{"path":"https://epiforecasts.io/socialmixr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Funk S, Willem L (2022). socialmixr: Social Mixing Matrices Infectious Disease Modelling. https://github.com/epiforecasts/socialmixr, https://epiforecasts.io/socialmixr/.","code":"@Manual{,   title = {socialmixr: Social Mixing Matrices for Infectious Disease Modelling},   author = {Sebastian Funk and Lander Willem},   year = {2022},   note = {https://github.com/epiforecasts/socialmixr, https://epiforecasts.io/socialmixr/}, }"},{"path":"https://epiforecasts.io/socialmixr/index.html","id":"social-mixing-matrices-for-infectious-disease-modelling-in-r","dir":"","previous_headings":"","what":"Social Mixing Matrices for Infectious Disease Modelling","title":"Social Mixing Matrices for Infectious Disease Modelling","text":"socialmixr R package derive social mixing matrices survey data.","code":""},{"path":"https://epiforecasts.io/socialmixr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Social Mixing Matrices for Infectious Disease Modelling","text":"package can installed using current development version can installed using remotes package","code":"install.packages(\"socialmixr\") remotes::install_github(\"sbfnk/socialmixr\")"},{"path":"https://epiforecasts.io/socialmixr/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Social Mixing Matrices for Infectious Disease Modelling","text":"information use socialmixr package, see vignette.","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check contact survey data — check","title":"Check contact survey data — check","text":"Checks survey fulfills requirements work 'contact_matrix' function","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check contact survey data — check","text":"","code":"# S3 method for survey check(   x,   columns = FALSE,   id.column = \"part_id\",   participant.age.column = \"part_age\",   country.column = \"country\",   year.column = \"year\",   contact.age.column = \"cnt_age\",   ... )"},{"path":"https://epiforecasts.io/socialmixr/reference/check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check contact survey data — check","text":"x survey() object columns given, named character vector containing name \"id\", \"participant.age\" \"contact.age\" columns id.column column participants contacts data frames links contacts participants participant.age.column column participants data frame containing participants' age country.column column participants data frame containing country participant queried year.column column participants data frame containing year participant queried contact.age.column column contacts data frame containing age contacts; exist, least columns \"..._exact\", \"..._est_min\" \"..._est_max\" must (see estimated.contact.age option contact_matrix()) ... ignored","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check contact survey data — check","text":"invisibly returns character vector relevant columns","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check contact survey data — check","text":"","code":"data(polymod) check(polymod) #> Check OK."},{"path":"https://epiforecasts.io/socialmixr/reference/cite.html","id":null,"dir":"Reference","previous_headings":"","what":"Citation for a survey — cite","title":"Citation for a survey — cite","text":"Gets full citation survey(). quiet FALSE (default)","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/cite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Citation for a survey — cite","text":"","code":"# S3 method for survey cite(x, ...)"},{"path":"https://epiforecasts.io/socialmixr/reference/cite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Citation for a survey — cite","text":"x character vector surveys cite ... ignored","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/cite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Citation for a survey — cite","text":"citation bibentry","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/cite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Citation for a survey — cite","text":"","code":"data(polymod) cite(polymod) #> Using POLYMOD social contact data. To cite this in a publication, use the 'cite' function #> Mossong J, Hens N, Jit M, Beutels P, Auranen K, Mikolajczyk R, Massari #> M, Salmaso S, Tomba GS, Wallinga J, Heijne J, Sadkowska-Todys M, #> Rosinska M, Edmunds WJ (2017). “POLYMOD social contact data.” #> doi:10.5281/zenodo.1157934 <https://doi.org/10.5281/zenodo.1157934>, #> Version 1.1."},{"path":"https://epiforecasts.io/socialmixr/reference/clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean contact survey data — clean","title":"Clean contact survey data — clean","text":"Cleans survey data work 'contact_matrix' function","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean contact survey data — clean","text":"","code":"# S3 method for survey clean(x, country.column = \"country\", participant.age.column = \"part_age\", ...)"},{"path":"https://epiforecasts.io/socialmixr/reference/clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean contact survey data — clean","text":"x survey() object country.column name country survey participant interviewed participant.age.column column x$participants containing participants' age ... ignored","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean contact survey data — clean","text":"cleaned survey correct format","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean contact survey data — clean","text":"","code":"data(polymod) cleaned <- clean(polymod) # not really necessary as the 'polymod' data set has already been cleaned"},{"path":"https://epiforecasts.io/socialmixr/reference/contact_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a contact matrix from diary survey data — contact_matrix","title":"Generate a contact matrix from diary survey data — contact_matrix","text":"Samples contact survey using bootstrap","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/contact_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a contact matrix from diary survey data — contact_matrix","text":"","code":"contact_matrix(   survey,   countries = c(),   survey.pop,   age.limits,   filter,   n = 1,   bootstrap,   counts = FALSE,   symmetric = FALSE,   split = FALSE,   estimated.participant.age = c(\"mean\", \"sample\", \"missing\"),   estimated.contact.age = c(\"mean\", \"sample\", \"missing\"),   missing.participant.age = c(\"remove\", \"keep\"),   missing.contact.age = c(\"remove\", \"sample\", \"keep\", \"ignore\"),   weights = c(),   weigh.dayofweek = FALSE,   weigh.age = FALSE,   weight.threshold = NA,   sample.all.age.groups = FALSE,   return.part.weights = FALSE,   return.demography = NA,   per.capita = FALSE,   ... )"},{"path":"https://epiforecasts.io/socialmixr/reference/contact_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a contact matrix from diary survey data — contact_matrix","text":"survey survey() object countries limit one countries; given, use countries survey; can given country names 2-letter (ISO Alpha-2) country codes survey.pop survey population -- either data frame columns 'lower.age.limit' 'population', character vector giving name(s) country countries list can obtained via wpp_countries; given, use country populations chosen countries, countries survey countries given age.limits lower limits age groups construct matrix filter filters apply data, given list form (column=filter_value) - contacts 'filter_value' 'column' considered. multiple filters given, applied independently sequence given. n number matrices sample bootstrap whether sample participants contacts randomly using bootstrap; default, use bootstrap n > 1 counts whether return counts (instead means) symmetric whether make matrix symmetric, c_ijN_i = cjiN_j. split whether split number contacts assortativity estimated.participant.age set \"mean\" (default), people whose ages given range (columns named \"..._est_min\" \"..._est_max\") exactly (column named \"..._exact\") age set mid-point range; set \"sample\", age sampled range; set \"missing\", age ranges treated missing estimated.contact.age set \"mean\" (default), contacts whose ages given range (columns named \"..._est_min\" \"..._est_max\") exactly (column named \"..._exact\") age set mid-point range; set \"sample\", age sampled range; set \"missing\", age ranges treated missing missing.participant.age set \"remove\" (default), participants without age information removed; set \"keep\", participants missing age kept treated separate age group missing.contact.age set \"remove\" (default), participants contacts without age information removed; set \"sample\", contacts without age information sampled contacts participants age group; set \"keep\", contacts missing age kept treated separate age group; set \"ignore\", contact missing age ignored contact analysis weights columns contain weights weigh.dayofweek whether weigh day week (weight (5/7 / N_week/N) weekdays (2/7 / N_weekend/N) weekends) weigh.age whether weigh age participants (vs. populations' age distribution) weight.threshold threshold value standardized weights running additional standardisation (default 'NA' = cutoff) sample..age.groups bootstrapping fails sample participants one age groups; FALSE (default), corresponding rows set NA, TRUE sample discarded new one taken instead return.part.weights boolean return participant weights return.demography boolean explicitly return demography data corresponds survey data (default 'NA' = demography data requested function parameters) per.capita wheter return matrix contact rates per capita (default FALSE possible 'counts=TRUE' 'split=TRUE') ... arguments pass get_survey(), check() pop_age() (especially column names)","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/contact_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a contact matrix from diary survey data — contact_matrix","text":"list sampled contact matrices, underlying demography surveyed population","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/contact_matrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate a contact matrix from diary survey data — contact_matrix","text":"Sebastian Funk","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/contact_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a contact matrix from diary survey data — contact_matrix","text":"","code":"data(polymod) contact_matrix(polymod, countries = \"United Kingdom\", age.limits = c(0, 1, 5, 15)) #> Using POLYMOD social contact data. To cite this in a publication, use the 'cite' function #> Removing participants that have contacts without age information. To change this behaviour, set the 'missing.contact.age' option #> $matrix #>          contact.age.group #> age.group      [0,1)     [1,5)   [5,15)      15+ #>    [0,1)  0.40000000 0.8000000 1.266667 5.933333 #>    [1,5)  0.11250000 1.9375000 1.462500 5.450000 #>    [5,15) 0.02450980 0.5049020 7.946078 6.215686 #>    15+    0.03230337 0.3581461 1.290730 9.594101 #>  #> $participants #>    age.group participants proportion #> 1:     [0,1)           15 0.01483680 #> 2:     [1,5)           80 0.07912957 #> 3:    [5,15)          204 0.20178042 #> 4:       15+          712 0.70425321 #>"},{"path":"https://epiforecasts.io/socialmixr/reference/get_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a survey, either from its Zenodo repository, a set of files, or a survey variable — get_survey","title":"Get a survey, either from its Zenodo repository, a set of files, or a survey variable — get_survey","text":"Downloads survey data, extracts files, returns clean data set.","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/get_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a survey, either from its Zenodo repository, a set of files, or a survey variable — get_survey","text":"","code":"get_survey(survey, ...)"},{"path":"https://epiforecasts.io/socialmixr/reference/get_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a survey, either from its Zenodo repository, a set of files, or a survey variable — get_survey","text":"survey DOI (see list_surveys()), character vector file names, survey() object (case cleaning done). ... options clean(), called end ","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/get_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a survey, either from its Zenodo repository, a set of files, or a survey variable — get_survey","text":"survey correct format","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/get_survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a survey, either from its Zenodo repository, a set of files, or a survey variable — get_survey","text":"","code":"if (FALSE) {   list_surveys()   peru_survey <- get_survey(\"https://doi.org/10.5281/zenodo.1095664\") }"},{"path":"https://epiforecasts.io/socialmixr/reference/limits_to_agegroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert lower age limits to age groups. — limits_to_agegroups","title":"Convert lower age limits to age groups. — limits_to_agegroups","text":"Mostly used plot labelling","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/limits_to_agegroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert lower age limits to age groups. — limits_to_agegroups","text":"","code":"limits_to_agegroups(x, limits = sort(unique(x)))"},{"path":"https://epiforecasts.io/socialmixr/reference/limits_to_agegroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert lower age limits to age groups. — limits_to_agegroups","text":"x age limits transform limits lower age limits; given, use limits x","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/limits_to_agegroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert lower age limits to age groups. — limits_to_agegroups","text":"Age groups (limits separated dashes)","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/limits_to_agegroups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert lower age limits to age groups. — limits_to_agegroups","text":"","code":"limits_to_agegroups(c(0, 5, 10)) #> [1] 0-4 5-9 10+ #> Levels: 0-4 < 5-9 < 10+"},{"path":"https://epiforecasts.io/socialmixr/reference/list_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"List all surveys available for download — list_surveys","title":"List all surveys available for download — list_surveys","text":"List surveys available download","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/list_surveys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all surveys available for download — list_surveys","text":"","code":"list_surveys()"},{"path":"https://epiforecasts.io/socialmixr/reference/list_surveys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all surveys available for download — list_surveys","text":"character vector surveys","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/list_surveys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all surveys available for download — list_surveys","text":"","code":"if (FALSE) {   list_surveys() }"},{"path":"https://epiforecasts.io/socialmixr/reference/matrix_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws an image plot of a contact matrix with a legend strip and the numeric values in the cells. — matrix_plot","title":"Draws an image plot of a contact matrix with a legend strip and the numeric values in the cells. — matrix_plot","text":"function combines R image.plot function numeric contact rates matrix cells.","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/matrix_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws an image plot of a contact matrix with a legend strip and the numeric values in the cells. — matrix_plot","text":"","code":"matrix_plot(   mij,   min.legend = 0,   max.legend = NA,   num.digits = 2,   num.colors = 50,   main,   xlab,   ylab,   legend.width,   cex.lab,   cex.axis,   cex.text,   color.palette = heat.colors,   ... )"},{"path":"https://epiforecasts.io/socialmixr/reference/matrix_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws an image plot of a contact matrix with a legend strip and the numeric values in the cells. — matrix_plot","text":"mij contact matrix containing contact rates participants age (rows) contacts age j (columns). default matrix format contact_matrix(). min.legend color scale minimum (default = 0). Set NA use minimium value mij. max.legend color scale maximum (default = NA). Set NA use maximum value mij. num.digits number digits rounding contact rates (default = 2). Use NA disable . num.colors number color breaks (default = 50) main figure title xlab title x axis (default: \"Age group (years)\") ylab title y axis (default: \"Contact age group (years)\") legend.width width legend strip characters. Default 1. cex.lab size x y labels (default: 1.2) cex.axis size axis labels (default: 0.8) cex.text size numeric values matrix (default: 1) color.palette color palette use (default: heat.colors()). examples topo.colors(), terrain.colors() hcl.colors(). User-defined functions also possible take number colors palette function argument. ... arguments pass image.plot()","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/matrix_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draws an image plot of a contact matrix with a legend strip and the numeric values in the cells. — matrix_plot","text":"function using basic R graphics make easier users socialmixr visualise social contact matrices.","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/matrix_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draws an image plot of a contact matrix with a legend strip and the numeric values in the cells. — matrix_plot","text":"Lander Willem","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/matrix_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draws an image plot of a contact matrix with a legend strip and the numeric values in the cells. — matrix_plot","text":"","code":"data(polymod) mij = contact_matrix(polymod, countries = \"United Kingdom\", age.limits = c(0, 18,65))$matrix #> Using POLYMOD social contact data. To cite this in a publication, use the 'cite' function #> Removing participants that have contacts without age information. To change this behaviour, set the 'missing.contact.age' option matrix_plot(mij)"},{"path":"https://epiforecasts.io/socialmixr/reference/polymod.html","id":null,"dir":"Reference","previous_headings":"","what":"Social contact data from 8 European countries — polymod","title":"Social contact data from 8 European countries — polymod","text":"dataset containing social mixing diary data 8 European countries: Belgium, Germany, Finland, Great Britain, Italy, Luxembourg, Netherlands Poland. Data fully described Mossong J, Hens N, Jit M, Beutels P, Auranen K, Mikolajczyk R, et al. (2008) Social Contacts Mixing Patterns Relevant Spread Infectious Diseases. PLoS Med 5(3): e74.","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/polymod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Social contact data from 8 European countries — polymod","text":"","code":"polymod"},{"path":"https://epiforecasts.io/socialmixr/reference/polymod.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Social contact data from 8 European countries — polymod","text":"list two data frames: participants study participant, age, country, year day week (starting 1 = Monday) contacts reported contacts study participants. variable phys_contact two levels (1 denotes physical contact 2 denotes non-physical contact), duration_multi five levels (1 less 5 minutes 5 4 hours, increasing order found Figure 1 Mossong et al.), frequency_multi five levels (1 daily, 2 weekly, 3 monthly, 4 less often, 5 first time)","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/polymod.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Social contact data from 8 European countries — polymod","text":"https://doi.org/10.1371/journal.pmed.0050074","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/pop_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Change age groups in population data — pop_age","title":"Change age groups in population data — pop_age","text":"changes population data age groups given age.limits, extrapolating linearly age groups (requested available) summing populations (fewer requested available)","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/pop_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change age groups in population data — pop_age","text":"","code":"pop_age(   pop,   age.limits,   pop.age.column = \"lower.age.limit\",   pop.column = \"population\",   ... )"},{"path":"https://epiforecasts.io/socialmixr/reference/pop_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change age groups in population data — pop_age","text":"pop data frame columns indicating lower age limits population sizes (see 'age.column' 'pop.column') age.limits lower age limits age groups extract pop.age.column column 'pop' data frame indicating lower age group limit pop.column column 'pop' data frame indicating population size ... ignored","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/pop_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change age groups in population data — pop_age","text":"data frame age-specific population data","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/pop_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change age groups in population data — pop_age","text":"","code":"ages_it_2015 <- wpp_age(\"Italy\", 2015)  # Modify the age data.frame to get age groups of 10 years instead of 5 pop_age(ages_it_2015, age.limit = seq(0, 100, by = 10)) #>    lower.age.limit population #> 1                0    5364003 #> 2               10    5592457 #> 3               20    5961399 #> 4               30    7291448 #> 5               40    9506109 #> 6               50    8773851 #> 7               60    7351345 #> 8               70    5689656 #> 9               80    3300856 #> 10              90     655885 #> 11             100      17203  # The function will also automatically interpolate if necessary pop_age(ages_it_2015, age.limit = c(0, 18, 40, 65)) #> Warning: Not all age groups represented in population data (5-year age band). #>   Linearly estimating age group sizes from the 5-year bands. #>   lower.age.limit population #> 1               0    9841066 #> 2              18   14368241 #> 3              40   21988054 #> 4              65   13306851"},{"path":"https://epiforecasts.io/socialmixr/reference/reduce_agegroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce the number of age groups given a broader set of limits — reduce_agegroups","title":"Reduce the number of age groups given a broader set of limits — reduce_agegroups","text":"Operates lower limits","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/reduce_agegroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce the number of age groups given a broader set of limits — reduce_agegroups","text":"","code":"reduce_agegroups(x, limits)"},{"path":"https://epiforecasts.io/socialmixr/reference/reduce_agegroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce the number of age groups given a broader set of limits — reduce_agegroups","text":"x vector limits limits new limits","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/reduce_agegroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce the number of age groups given a broader set of limits — reduce_agegroups","text":"vector new age groups","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/reduce_agegroups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce the number of age groups given a broader set of limits — reduce_agegroups","text":"","code":"reduce_agegroups(seq_len(20), c(0, 5, 10)) #>  [1]  0  0  0  0  5  5  5  5  5 10 10 10 10 10 10 10 10 10 10 10"},{"path":"https://epiforecasts.io/socialmixr/reference/survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Contact survey — survey","title":"Contact survey — survey","text":"survey object contains results contact survey. particular, contains two data frames called participants contacts linked column specified id.column","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contact survey — survey","text":"","code":"survey(participants, contacts, reference = NULL)"},{"path":"https://epiforecasts.io/socialmixr/reference/survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contact survey — survey","text":"participants data.frame containing information participants contacts data.frame containing information contacts reference list containing information needed reference survey, particular can contain$\"title\", \"bibtype\", \"author\", \"doi\", \"publisher\", \"note\", \"year\"","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contact survey — survey","text":"new survey object","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/survey.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Contact survey — survey","text":"Sebastian Funk","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contact survey — survey","text":"","code":"data(polymod) new_survey <- survey(polymod$participants, polymod$contacts)"},{"path":"https://epiforecasts.io/socialmixr/reference/survey_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"List all countries contained in a survey — survey_countries","title":"List all countries contained in a survey — survey_countries","text":"List countries contained survey","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/survey_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all countries contained in a survey — survey_countries","text":"","code":"survey_countries(survey, country.column = \"country\", ...)"},{"path":"https://epiforecasts.io/socialmixr/reference/survey_countries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all countries contained in a survey — survey_countries","text":"survey DOI (see list_surveys()), character vector file names, survey() object (case cleaning done). country.column column survey indicating country ... arguments get_survey()","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/survey_countries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all countries contained in a survey — survey_countries","text":"list countries","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/survey_countries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all countries contained in a survey — survey_countries","text":"","code":"data(polymod) survey_countries(polymod) #> Using POLYMOD social contact data. To cite this in a publication, use the 'cite' function #> [1] \"Italy\"          \"Germany\"        \"Luxembourg\"     \"Netherlands\"    #> [5] \"Poland\"         \"United Kingdom\" \"Finland\"        \"Belgium\""},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Get age-specific population data according to the World Population Prospects 2017 edition — wpp_age","title":"Get age-specific population data according to the World Population Prospects 2017 edition — wpp_age","text":"uses data wpp2017 package combines male female, converts age groups lower age limits. requested year present historical data, wpp projections used.","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get age-specific population data according to the World Population Prospects 2017 edition — wpp_age","text":"","code":"wpp_age(countries, years)"},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get age-specific population data according to the World Population Prospects 2017 edition — wpp_age","text":"countries countries, return given years years, return given","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get age-specific population data according to the World Population Prospects 2017 edition — wpp_age","text":"data frame age-specific population data","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get age-specific population data according to the World Population Prospects 2017 edition — wpp_age","text":"","code":"wpp_age(\"Italy\", c(1990, 2000)) #>    country lower.age.limit year population #> 1    Italy               0 1990    2822304 #> 2    Italy               0 2000    2637136 #> 3    Italy               5 1990    3023980 #> 4    Italy               5 2000    2739340 #> 5    Italy              10 1990    3561309 #> 6    Italy              10 2000    2831090 #> 7    Italy              15 1990    4319849 #> 8    Italy              15 2000    3073079 #> 9    Italy              20 1990    4605558 #> 10   Italy              20 2000    3604592 #> 11   Italy              25 1990    4569835 #> 12   Italy              25 2000    4310742 #> 13   Italy              30 1990    4089269 #> 14   Italy              30 2000    4585507 #> 15   Italy              35 1990    3877176 #> 16   Italy              35 2000    4550292 #> 17   Italy              40 1990    4012685 #> 18   Italy              40 2000    4048479 #> 19   Italy              45 1990    3442232 #> 20   Italy              45 2000    3814334 #> 21   Italy              50 1990    3667739 #> 22   Italy              50 2000    3917415 #> 23   Italy              55 1990    3406176 #> 24   Italy              55 2000    3321124 #> 25   Italy              60 1990    3242609 #> 26   Italy              60 2000    3462994 #> 27   Italy              65 1990    2950508 #> 28   Italy              65 2000    3092828 #> 29   Italy              70 1990    1757407 #> 30   Italy              70 2000    2746488 #> 31   Italy              75 1990    1899219 #> 32   Italy              75 2000    2234744 #> 33   Italy              80 1990    1178560 #> 34   Italy              80 2000    1103674 #> 35   Italy              85 1990     516304 #> 36   Italy              85 2000     861254 #> 37   Italy              90 1990     155466 #> 38   Italy              90 2000     299811 #> 39   Italy              95 1990      26710 #> 40   Italy              95 2000      53950 #> 41   Italy             100 1990       2231 #> 42   Italy             100 2000       4848"},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"List all countries and regions for which socialmixr has population data — wpp_countries","title":"List all countries and regions for which socialmixr has population data — wpp_countries","text":"Uses World Population Prospects data wpp2017 package","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all countries and regions for which socialmixr has population data — wpp_countries","text":"","code":"wpp_countries()"},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_countries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all countries and regions for which socialmixr has population data — wpp_countries","text":"list countries","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_countries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all countries and regions for which socialmixr has population data — wpp_countries","text":"","code":"wpp_countries() #>   [1] \"China\"                            \"Burundi\"                          #>   [3] \"Comoros\"                          \"Djibouti\"                         #>   [5] \"Eritrea\"                          \"Ethiopia\"                         #>   [7] \"Kenya\"                            \"Madagascar\"                       #>   [9] \"Malawi\"                           \"Mauritius\"                        #>  [11] \"Mayotte\"                          \"Mozambique\"                       #>  [13] \"Réunion\"                          \"Rwanda\"                           #>  [15] \"Seychelles\"                       \"Somalia\"                          #>  [17] \"South Sudan\"                      \"Uganda\"                           #>  [19] \"Tanzania\"                         \"Zambia\"                           #>  [21] \"Zimbabwe\"                         \"Angola\"                           #>  [23] \"Cameroon\"                         \"Central African Republic\"         #>  [25] \"Chad\"                             \"Congo - Brazzaville\"              #>  [27] \"Congo - Kinshasa\"                 \"Equatorial Guinea\"                #>  [29] \"Gabon\"                            \"São Tomé & Príncipe\"              #>  [31] \"Algeria\"                          \"Egypt\"                            #>  [33] \"Libya\"                            \"Morocco\"                          #>  [35] \"Sudan\"                            \"Tunisia\"                          #>  [37] \"Western Sahara\"                   \"Botswana\"                         #>  [39] \"Lesotho\"                          \"Namibia\"                          #>  [41] \"South Africa\"                     \"Eswatini\"                         #>  [43] \"Benin\"                            \"Burkina Faso\"                     #>  [45] \"Cape Verde\"                       \"Côte d’Ivoire\"                    #>  [47] \"Gambia\"                           \"Ghana\"                            #>  [49] \"Guinea\"                           \"Guinea-Bissau\"                    #>  [51] \"Liberia\"                          \"Mali\"                             #>  [53] \"Mauritania\"                       \"Niger\"                            #>  [55] \"Nigeria\"                          \"Senegal\"                          #>  [57] \"Sierra Leone\"                     \"Togo\"                             #>  [59] \"China\"                            \"Hong Kong SAR China\"              #>  [61] \"Macao SAR China\"                  \"Taiwan\"                           #>  [63] \"North Korea\"                      \"Japan\"                            #>  [65] \"Mongolia\"                         \"South Korea\"                      #>  [67] \"Kazakhstan\"                       \"Kyrgyzstan\"                       #>  [69] \"Tajikistan\"                       \"Turkmenistan\"                     #>  [71] \"Uzbekistan\"                       \"Afghanistan\"                      #>  [73] \"Bangladesh\"                       \"Bhutan\"                           #>  [75] \"India\"                            \"Iran\"                             #>  [77] \"Maldives\"                         \"Nepal\"                            #>  [79] \"Pakistan\"                         \"Sri Lanka\"                        #>  [81] \"Brunei\"                           \"Cambodia\"                         #>  [83] \"Indonesia\"                        \"Laos\"                             #>  [85] \"Malaysia\"                         \"Myanmar (Burma)\"                  #>  [87] \"Philippines\"                      \"Singapore\"                        #>  [89] \"Thailand\"                         \"Timor-Leste\"                      #>  [91] \"Vietnam\"                          \"Armenia\"                          #>  [93] \"Azerbaijan\"                       \"Bahrain\"                          #>  [95] \"Cyprus\"                           \"Georgia\"                          #>  [97] \"Iraq\"                             \"Israel\"                           #>  [99] \"Jordan\"                           \"Kuwait\"                           #> [101] \"Lebanon\"                          \"Oman\"                             #> [103] \"Qatar\"                            \"Saudi Arabia\"                     #> [105] \"Palestinian Territories\"          \"Syria\"                            #> [107] \"Turkey\"                           \"United Arab Emirates\"             #> [109] \"Yemen\"                            \"Belarus\"                          #> [111] \"Bulgaria\"                         \"Czechia\"                          #> [113] \"Hungary\"                          \"Poland\"                           #> [115] \"Moldova\"                          \"Romania\"                          #> [117] \"Russia\"                           \"Slovakia\"                         #> [119] \"Ukraine\"                          \"Channel Islands\"                  #> [121] \"Denmark\"                          \"Estonia\"                          #> [123] \"Finland\"                          \"Iceland\"                          #> [125] \"Ireland\"                          \"Latvia\"                           #> [127] \"Lithuania\"                        \"Norway\"                           #> [129] \"Sweden\"                           \"United Kingdom\"                   #> [131] \"Albania\"                          \"Bosnia & Herzegovina\"             #> [133] \"Croatia\"                          \"Greece\"                           #> [135] \"Italy\"                            \"Malta\"                            #> [137] \"Montenegro\"                       \"Portugal\"                         #> [139] \"Serbia\"                           \"Slovenia\"                         #> [141] \"Spain\"                            \"North Macedonia\"                  #> [143] \"Austria\"                          \"Belgium\"                          #> [145] \"France\"                           \"Germany\"                          #> [147] \"Luxembourg\"                       \"Netherlands\"                      #> [149] \"Switzerland\"                      \"Antigua & Barbuda\"                #> [151] \"Aruba\"                            \"Bahamas\"                          #> [153] \"Barbados\"                         \"Cuba\"                             #> [155] \"Curaçao\"                          \"Dominican Republic\"               #> [157] \"Grenada\"                          \"Guadeloupe\"                       #> [159] \"Haiti\"                            \"Jamaica\"                          #> [161] \"Martinique\"                       \"Puerto Rico\"                      #> [163] \"St. Lucia\"                        \"St. Vincent & Grenadines\"         #> [165] \"Trinidad & Tobago\"                \"U.S. Virgin Islands\"              #> [167] \"Belize\"                           \"Costa Rica\"                       #> [169] \"El Salvador\"                      \"Guatemala\"                        #> [171] \"Honduras\"                         \"Mexico\"                           #> [173] \"Nicaragua\"                        \"Panama\"                           #> [175] \"Argentina\"                        \"Bolivia\"                          #> [177] \"Brazil\"                           \"Chile\"                            #> [179] \"Colombia\"                         \"Ecuador\"                          #> [181] \"French Guiana\"                    \"Guyana\"                           #> [183] \"Paraguay\"                         \"Peru\"                             #> [185] \"Suriname\"                         \"Uruguay\"                          #> [187] \"Venezuela\"                        \"Canada\"                           #> [189] \"United States\"                    \"Australia\"                        #> [191] \"New Zealand\"                      \"Fiji\"                             #> [193] \"New Caledonia\"                    \"Papua New Guinea\"                 #> [195] \"Solomon Islands\"                  \"Vanuatu\"                          #> [197] \"Guam\"                             \"Kiribati\"                         #> [199] \"Micronesia (Federated States of)\" \"French Polynesia\"                 #> [201] \"Samoa\"                            \"Tonga\""},{"path":[]},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"major--breaking-changes-0-1-9","dir":"Changelog","previous_headings":"","what":"Major & breaking changes","title":"socialmixr 0.1.9","text":"error argument removed check() always return warnings. want turn warnings errors, please look options(warn = 2) quiet argument removed check(), cite(), contact_matrix(), get_survey(). want silence diagnostic messages, use R idiomatic mechanisms, suppressMessages() new matrix_plot() function plot contact matrix","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"minor-changes-0-1-9","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"socialmixr 0.1.9","text":"world population data updated 2017 switching wpp2015 wpp2017 package chkDots() now used ensure argument silently ignored S3 methods","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"internal-changes-0-1-9","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"socialmixr 0.1.9","text":"continuous integration now done via GitHub Actions","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-018","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.8","title":"socialmixr 0.1.8","text":"CRAN release: 2020-11-14 fixed test fixed order limits reduce_agegroups","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-017","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.7","title":"socialmixr 0.1.7","text":"CRAN release: 2020-08-06 fixed bug age given range, age.limits contains ages represented data limits_to_agegroups now returns ordered list (thanks @pearsonca) now allows estimated participant age (thanks @jarvisc1) fixed bug calculating weights (thanks @alxsrobert)","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-016","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.6","title":"socialmixr 0.1.6","text":"CRAN release: 2020-01-10 access Zenodo fails informative error message now given tests require access Zenodo now fail accessed fixed bug interpreting return values Zenodo API","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-015","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.5","title":"socialmixr 0.1.5","text":"CRAN release: 2019-09-24 removed option call survey number - use DOI reproducibility","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-014","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.4","title":"socialmixr 0.1.4","text":"CRAN release: 2019-07-24 better work missing diverse data (e.g., age factors) ‘get_survey’ now works URLs fixed ‘list_surveys’ return latest version data set small fixes","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-013","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.3","title":"socialmixr 0.1.3","text":"CRAN release: 2018-08-09 improved handling DOIs fixed usage weights consistency checks tests performance improvements weighting ‘pop_age’ can now called user","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-012","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.2","title":"socialmixr 0.1.2","text":"CRAN release: 2018-02-22 improved downloading form Zenodo; single download used now improved handling country names fixed bugs “filter” option POLYMOD data set updated latest v1.1 allow user choose ages estimated age ranges","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-011","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.1","title":"socialmixr 0.1.1","text":"CRAN release: 2018-01-15 fix: dependency R >= 3.4.0 updated reference handling survey pulled Zenodo ‘survey’ function can now used create ‘survey’ object data frames small patches fixes","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-010","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.0","title":"socialmixr 0.1.0","text":"CRAN release: 2018-01-08 initial release","code":""}]
